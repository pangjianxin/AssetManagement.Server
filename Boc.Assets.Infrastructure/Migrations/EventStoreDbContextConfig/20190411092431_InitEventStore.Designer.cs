// <auto-generated />
using System;
using Boc.Assets.Infrastructure.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Boc.Assets.Infrastructure.migrations.eventstoredbcontextconfig
{
    [DbContext(typeof(EventStoreDbContext))]
    [Migration("20190411092431_InitEventStore")]
    partial class InitEventStore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Boc.Assets.Domain.Events.Assets.AssetApplyEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AggregateId");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Org2")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<Guid>("RequestOrgId");

                    b.Property<string>("RequestOrgIdentifier")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("RequestOrgNam")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.Property<Guid>("TargetOrgId");

                    b.Property<string>("TargetOrgIdentifier")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("TargetOrgNam")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("AssetApplyingEvents");
                });

            modelBuilder.Entity("Boc.Assets.Domain.Events.Assets.AssetExchangeEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AggregateId");

                    b.Property<Guid>("AssetId");

                    b.Property<string>("AssetName");

                    b.Property<Guid>("ExchangeOrgId");

                    b.Property<string>("ExchangeOrgIdentifier");

                    b.Property<string>("ExchangeOrgNam");

                    b.Property<string>("Message");

                    b.Property<string>("Org2");

                    b.Property<Guid>("RequestOrgId");

                    b.Property<string>("RequestOrgIdentifier");

                    b.Property<string>("RequestOrgNam");

                    b.Property<int>("Status");

                    b.Property<Guid>("TargetOrgId");

                    b.Property<string>("TargetOrgIdentifier");

                    b.Property<string>("TargetOrgNam");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("AssetExchangingEvents");
                });

            modelBuilder.Entity("Boc.Assets.Domain.Events.Assets.AssetReturnEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AggregateId");

                    b.Property<Guid>("AssetId");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Org2")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<Guid>("RequestOrgId");

                    b.Property<string>("RequestOrgIdentifier")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("RequestOrgNam")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.Property<Guid>("TargetOrgId");

                    b.Property<string>("TargetOrgIdentifier")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("TargetOrgNam")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("AssetReturningEvents");
                });

            modelBuilder.Entity("Boc.Assets.Domain.Events.NonAuditEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AggregateId");

                    b.Property<string>("EventSubTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Org2")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("OrgIdentifier")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("OrgNam")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("TimeStamp");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("NonAuditEvents");
                });

            modelBuilder.Entity("Boc.Assets.Domain.Events.Assets.AssetApplyEvent", b =>
                {
                    b.OwnsOne("Boc.Assets.Domain.Events.Assets.AssetCategoryInfo", "AssetCategoryInfo", b1 =>
                        {
                            b1.Property<Guid>("AssetApplyEventId");

                            b1.Property<Guid>("AssetCategoryId");

                            b1.Property<string>("AssetCategoryThirdLevel")
                                .IsRequired()
                                .HasMaxLength(50);

                            b1.HasKey("AssetApplyEventId");

                            b1.ToTable("AssetApplyingEvents");

                            b1.HasOne("Boc.Assets.Domain.Events.Assets.AssetApplyEvent")
                                .WithOne("AssetCategoryInfo")
                                .HasForeignKey("Boc.Assets.Domain.Events.Assets.AssetCategoryInfo", "AssetApplyEventId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
